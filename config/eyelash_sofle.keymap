#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        d {
            bindings = <&kp ESCAPE>;
            key-positions = <39 0>;
            slow-release;
        };

        dd {
            bindings = <&kp PRINTSCREEN>;
            key-positions = <0 55>;
        };

        f1 {
            bindings = <&kp F1>;
            key-positions = <1 59>;
        };

        f2 {
            bindings = <&kp F2>;
            key-positions = <59 2>;
        };

        f3 {
            bindings = <&kp F3>;
            key-positions = <3 59>;
        };

        f4 {
            bindings = <&kp F4>;
            key-positions = <59 4>;
        };

        f5 {
            bindings = <&kp F5>;
            key-positions = <59 5>;
        };

        f6 {
            bindings = <&kp F6>;
            key-positions = <59 7>;
        };

        f7 {
            bindings = <&kp F7>;
            key-positions = <59 8>;
        };

        f8 {
            bindings = <&kp F8>;
            key-positions = <59 9>;
        };

        f {
            bindings = <&kp F9>;
            key-positions = <10 59>;
        };

        f10 {
            bindings = <&kp F10>;
            key-positions = <59 11>;
        };

        f11 {
            bindings = <&kp F11>;
            key-positions = <24 59>;
        };

        f12 {
            bindings = <&kp F12>;
            key-positions = <25 59>;
        };

        ddfs {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <39 37>;
        };

        dfs {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <39 38>;
        };

        dfsfdfd {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <39 24>;
        };

        dsfsdf {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <39 25>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp TILDE         &kp N1        &kp N2        &kp N3     &kp N4     &kp N5     &kp UP_ARROW    &kp N6          &kp N7     &kp N8        &kp N9    &kp N0     &kp BACKSPACE
&kp TAB           &kp Q         &kp W         &kp E      &kp R      &kp T      &kp DOWN_ARROW  &kp Y           &kp U      &kp I         &kp O     &kp P      &kp MINUS
&kp LEFT_CONTROL  &kp A         &kp S         &kp D      &kp F      &kp G      &to 1           &kp H           &kp J      &kp K         &kp L     &kp SEMI   &kp APOS
&kp LEFT_SHIFT    &kp Z         &kp X         &kp C      &kp V      &kp B      &to 2           &kp N           &kp M      &kp UP_ARROW  &kp DOT   &kp SLASH  &kp ENTER
&kp C_MUTE        &kp CAPSLOCK  &kp LEFT_ALT  &kp SPACE  &kp SPACE  &kp DEL    &kp ESCAPE      &kp LANGUAGE_1  &kp COMMA  &kp LEFT      &kp DOWN  &kp RIGHT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp ESCAPE      &kp F1            &kp F2        &kp F3          &kp F4     &kp F5    &mmv MOVE_UP    &kp F6     &kp F7           &kp F8           &kp F9           &kp F10           &kp F11
&kp F12         &kp Q             &kp W         &kp E           &kp R      &kp T     &mmv MOVE_DOWN  &kp PG_UP  &kp END          &kp PRINTSCREEN  &kp HOME         &kp MINUS         &kp EQUAL
&kp TAB         &kp A             &kp S         &kp D           &kp F      &kp G     &to 0           &kp PG_DN  &kp LANGUAGE_2   &kp LEFT_BRACE   &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LEFT_SHIFT  &kp Z             &kp X         &kp C           &kp V      &kp B     &to 2           &kp INS    &rgb_ug RGB_BRD  &kp UP_ARROW     &trans           &kp DEL           &kp BACKSPACE
&kp C_MUTE      &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LANGUAGE_1  &kp SPACE  &trans    &kp ENTER       &trans     &kp SPACE        &kp LEFT_ARROW   &kp DOWN         &kp RIGHT
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE       &bt BT_SEL 0      &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4    &mmv MOVE_UP    &kp SLASH     &kp ASTERISK  &kp MINUS     &kp PLUS   &trans            &kp BACKSPACE
&trans          &bt BT_CLR        &bt BT_CLR_ALL  &trans          &trans          &trans          &mmv MOVE_DOWN  &kp N7        &kp N8        &kp N9        &trans     &kp LEFT_BRACE    &kp RIGHT_BRACE
&trans          &out OUT_USB      &out OUT_BLE    &trans          &trans          &trans          &to 0           &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans     &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LEFT_SHIFT  &sys_reset        &trans          &bootloader     &trans          &kp UP_ARROW    &to 1           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &soft_off  &bootloader       &kp ENTER
&trans          &kp LEFT_CONTROL  &kp LEFT_ALT    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT       &mkp LCLK       &trans        &kp COMMA     &kp N0        &kp DOT    &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
