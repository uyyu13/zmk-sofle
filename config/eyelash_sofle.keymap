#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        d {
            bindings = <&kp ESCAPE>;
            key-positions = <39 0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp TILDE   &kp N1     &kp N2        &kp N3    &kp N4     &kp N5          &kp UP_ARROW    &kp N6          &kp N7     &kp N8     &kp N9      &kp N0          &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E     &kp R      &kp T           &kp DOWN_ARROW  &kp Y           &kp U      &kp I      &kp O       &kp P           &kp MINUS
&kp CAPS    &kp A      &kp S         &kp D     &kp F      &kp G           &to 1           &kp H           &kp J      &kp K      &kp L       &kp SEMI        &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C     &kp V      &kp B           &to 2           &kp N           &kp M      &kp COMMA  &kp DOT     &kp SLASH       &kp ENTER
&kp C_MUTE  &kp LCTRL  &kp LEFT_ALT  &kp LEFT  &kp SPACE  &kp UP_ARROW    &kp ESCAPE      &kp DOWN_ARROW  &kp SPACE  &kp RIGHT  &kp DELETE  &kp LANGUAGE_1
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp ESCAPE      &kp F1            &kp F2        &kp F3          &kp F4     &kp F5    &mmv MOVE_UP    &kp F6     &kp F7           &kp F8           &kp F9           &kp F10           &kp F11
&kp F12         &kp Q             &kp W         &kp E           &kp R      &kp T     &mmv MOVE_DOWN  &kp PG_UP  &kp END          &kp PRINTSCREEN  &kp HOME         &kp MINUS         &kp EQUAL
&kp TAB         &kp A             &kp S         &kp D           &kp F      &kp G     &to 0           &kp PG_DN  &kp LANGUAGE_2   &kp LEFT_BRACE   &kp RIGHT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LEFT_SHIFT  &kp Z             &kp X         &kp C           &kp V      &kp B     &to 2           &kp INS    &rgb_ug RGB_BRD  &kp UP_ARROW     &trans           &kp DEL           &kp BACKSPACE
&kp C_MUTE      &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LANGUAGE_1  &kp SPACE  &trans    &kp ENTER       &trans     &kp SPACE        &kp LEFT_ARROW   &kp DOWN         &kp RIGHT
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE       &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &mmv MOVE_UP    &kp SLASH     &kp ASTERISK  &kp MINUS     &kp PLUS   &trans            &kp BACKSPACE
&trans          &bt BT_CLR      &bt BT_CLR_ALL  &trans        &trans        &trans          &mmv MOVE_DOWN  &kp N7        &kp N8        &kp N9        &trans     &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans          &out OUT_USB    &out OUT_BLE    &trans        &trans        &trans          &to 0           &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans     &kp LBRC          &kp RBRC
&kp LEFT_SHIFT  &sys_reset      &trans          &bootloader   &trans        &trans          &to 1           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &soft_off  &bootloader       &kp ENTER
&trans          &kp LEFT_SHIFT  &kp LEFT_ALT    &trans        &trans        &trans          &mkp LCLK       &trans        &kp COMMA     &kp N0        &kp DOT    &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
